name: Frontend CD Workflow

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch: # Allows manual trigger

env:
  ECR_REPOSITORY: 710173168288.dkr.ecr.us-east-1.amazonaws.com/frontend
  AWS_REGION: us-east-1 # Change to your AWS region

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.2'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Run ESLint
        run: npm run lint
        working-directory: frontend
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Run Tests
        run: npm test
        working-directory: frontend

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test] # Only runs if tests succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:$GITHUB_SHA .
          docker tag $ECR_REPOSITORY:$GITHUB_SHA $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA
        working-directory: frontend

      - name: Push Docker Image to ECR
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build # Only runs if the build job succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.0' # Specify your desired kubectl version

      - name: Apply Kubernetes Manifests
        run: |
          sed -i "s|image:.*|image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA|g" k8s\deployment.yaml
          kubectl apply -f k8s/kustomization.yaml
        working-directory: frontend
