name: Backend CD Workflow

on:
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch: # Allows manual execution
  
env:
  ECR_REPOSITORY: 710173168288.dkr.ecr.us-east-1.amazonaws.com/frontend
  AWS_REGION: us-east-1 # Change to your AWS region

jobs:
  lint:
    name: Lint Frontend Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv
        working-directory: backend

      - name: Install Dependencies
        run: pipenv install
        working-directory: backend

      - name: Run ESLint
        run: pipenv run lint
        working-directory: backend

  test:
    name: Run Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: pipenv install
        working-directory: backend

      - name: Run Test
        run: pipenv run test
        working-directory: backend

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test] # Only runs if tests succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::710173168288:user/Administrator_Role
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY:$GITHUB_SHA .
          docker tag $ECR_REPOSITORY:$GITHUB_SHA $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA
        working-directory: frontend

      - name: Push Docker Image to ECR
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA
  deploy:
      name: Deploy to Kubernetes
      runs-on: ubuntu-latest
      needs: build # Only runs if the build job succeeds
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Setup kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.25.0' # Specify your desired kubectl version

        - name: Apply Kubernetes Manifests
          run: |
            sed -i "s|image:.*|image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$GITHUB_SHA|g" k8s\deployment.yaml
            kubectl apply -f k8s/kustomization.yaml
          working-directory: backend